{"ast":null,"code":"var _jsxFileName = \"/Users/alex/codebase/latch-take-home/src/components/mark.jsx\";\nimport { Typography } from '@mui/material';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Mark({\n  title,\n  type,\n  text,\n  children,\n  bold,\n  italicized,\n  underlined,\n  variableType,\n  color,\n  clauseCounter\n}) {\n  console.log(type, text, children);\n  const getChildren = () => children.map((child, index) => {\n    const isBold = child.bold || bold;\n    const isItalicized = child.italicized || italicized;\n    const isUnderlined = child.underlined || underlined;\n    const isList = type === \"ul\" || type === \"ol\";\n    const childJsx = /*#__PURE__*/_jsxDEV(Mark, {\n      title: child.title,\n      type: child.type,\n      text: child.text,\n      bold: child.bold,\n      italicized: isBold,\n      underlined: isItalicized,\n      variableType: isUnderlined,\n      color: child.color,\n      clauseCounter: clauseCounter,\n      children: child.children\n    }, !isList && index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 22\n    }, this);\n    if (isList) return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: childJsx\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 24\n    }, this);else return childJsx;\n  });\n  const getTypeWrapper = () => {\n    switch (type) {\n      case \"block\":\n        return children => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 30\n        }, this);\n      case \"p\":\n        return children => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 30\n        }, this);\n      case \"h1\":\n        return children => /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 30\n        }, this);\n      case \"h2\":\n        return children => /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 30\n        }, this);\n      case \"h3\":\n        return children => /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 30\n        }, this);\n      case \"h4\":\n        return children => /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 30\n        }, this);\n      case \"h5\":\n        return children => /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 30\n        }, this);\n      case \"h6\":\n        return children => /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 30\n        }, this);\n      case \"ul\":\n        return children => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 30\n        }, this);\n      case \"ol\":\n        return children => /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this);\n      case \"span\":\n        return children => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 30\n        }, this);\n      case \"clause\":\n        const current = clauseCounter.current;\n        clauseCounter.current += 1;\n        return children => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [current, \". \", children]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this);\n      default:\n        return children => /*#__PURE__*/_jsxDEV(\"span\", {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 30\n        }, this);\n    }\n  };\n  if (text) return /*#__PURE__*/_jsxDEV(Typography, {\n    component: \"span\",\n    bgcolor: color,\n    sx: {\n      fontWeight: bold ? 'bold' : 'normal',\n      fontStyle: italicized ? 'italic' : 'normal',\n      textDecoration: underlined ? 'underline' : 'none'\n    },\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 19\n  }, this);else return getTypeWrapper()(getChildren());\n}\n_c = Mark;\nexport default Mark;\nvar _c;\n$RefreshReg$(_c, \"Mark\");","map":{"version":3,"names":["Typography","React","jsxDEV","_jsxDEV","Mark","title","type","text","children","bold","italicized","underlined","variableType","color","clauseCounter","console","log","getChildren","map","child","index","isBold","isItalicized","isUnderlined","isList","childJsx","fileName","_jsxFileName","lineNumber","columnNumber","getTypeWrapper","current","component","bgcolor","sx","fontWeight","fontStyle","textDecoration","_c","$RefreshReg$"],"sources":["/Users/alex/codebase/latch-take-home/src/components/mark.jsx"],"sourcesContent":["import { Typography } from '@mui/material'\nimport React from 'react'\n\nfunction Mark({title, type, text, children, bold, italicized, underlined, variableType, color, clauseCounter}) {\n\n  console.log(type, text, children)\n\n  const getChildren = () => children.map((child, index) => {\n    const isBold = child.bold || bold\n    const isItalicized = child.italicized || italicized\n    const isUnderlined = child.underlined || underlined\n    const isList = type === \"ul\" || type === \"ol\"\n    const childJsx = <Mark\n      key={!isList && index}\n      title={child.title}\n      type={child.type}\n      text={child.text}\n      bold={child.bold}\n      italicized={isBold}\n      underlined={isItalicized}\n      variableType={isUnderlined}\n      color={child.color}\n      clauseCounter={clauseCounter}\n      children={child.children}\n    />\n    if (isList) return <li key={index}>{childJsx}</li>\n    else return childJsx\n  })\n\n  const getTypeWrapper = () => {\n    switch(type) {\n      case \"block\":\n        return (children) => <div>{children}</div>\n      case \"p\":\n        return (children) => <p>{children}</p>\n      case \"h1\":\n        return (children) => <h1>{children}</h1>\n      case \"h2\":\n        return (children) => <h2>{children}</h2>\n      case \"h3\":\n        return (children) => <h3>{children}</h3>\n      case \"h4\":\n        return (children) => <h4>{children}</h4>\n      case \"h5\":\n        return (children) => <h5>{children}</h5>\n      case \"h6\":\n        return (children) => <h6>{children}</h6>\n      case \"ul\":\n        return (children) => <ul>{children}</ul>\n      case \"ol\":\n        return (children) => <ol>{children}</ol>\n      case \"span\":\n        return (children) => <span>{children}</span>\n      case \"clause\":\n        const current = clauseCounter.current\n        clauseCounter.current += 1\n        return (children) => <div>{current}. {children}</div>\n      default:\n        return (children) => <span>{children}</span>\n    }\n  }\n\n  if(text) return <Typography component=\"span\" bgcolor={color} sx={{fontWeight: bold ? 'bold' : 'normal', fontStyle: italicized ? 'italic' : 'normal', textDecoration: underlined ? 'underline' : 'none'}}>{text}</Typography>\n  else return (\n    getTypeWrapper()(getChildren())\n  )\n}\n\n\nexport default Mark"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}